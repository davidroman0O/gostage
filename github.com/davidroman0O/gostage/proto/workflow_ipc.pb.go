// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/workflow_ipc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message types - matches your existing MessageType
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED     MessageType = 0
	MessageType_MESSAGE_TYPE_LOG             MessageType = 1
	MessageType_MESSAGE_TYPE_STORE_PUT       MessageType = 2
	MessageType_MESSAGE_TYPE_STORE_DELETE    MessageType = 3
	MessageType_MESSAGE_TYPE_WORKFLOW_START  MessageType = 4
	MessageType_MESSAGE_TYPE_WORKFLOW_RESULT MessageType = 5
	MessageType_MESSAGE_TYPE_FINAL_STORE     MessageType = 6
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSPECIFIED",
		1: "MESSAGE_TYPE_LOG",
		2: "MESSAGE_TYPE_STORE_PUT",
		3: "MESSAGE_TYPE_STORE_DELETE",
		4: "MESSAGE_TYPE_WORKFLOW_START",
		5: "MESSAGE_TYPE_WORKFLOW_RESULT",
		6: "MESSAGE_TYPE_FINAL_STORE",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED":     0,
		"MESSAGE_TYPE_LOG":             1,
		"MESSAGE_TYPE_STORE_PUT":       2,
		"MESSAGE_TYPE_STORE_DELETE":    3,
		"MESSAGE_TYPE_WORKFLOW_START":  4,
		"MESSAGE_TYPE_WORKFLOW_RESULT": 5,
		"MESSAGE_TYPE_FINAL_STORE":     6,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workflow_ipc_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_workflow_ipc_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{0}
}

// Message metadata for comprehensive tracing
type MessageContext struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId     string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`                // ID of the workflow that sent this message
	StageId        string                 `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`                         // ID of the stage that sent this message
	ActionName     string                 `protobuf:"bytes,3,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`                // Name of the action that sent this message
	ProcessId      int32                  `protobuf:"varint,4,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`                  // PID of the process that sent this message
	IsChildProcess bool                   `protobuf:"varint,5,opt,name=is_child_process,json=isChildProcess,proto3" json:"is_child_process,omitempty"` // Whether this came from a spawned child process
	ActionIndex    int32                  `protobuf:"varint,6,opt,name=action_index,json=actionIndex,proto3" json:"action_index,omitempty"`            // Index of action within stage (0-based)
	IsLastAction   bool                   `protobuf:"varint,7,opt,name=is_last_action,json=isLastAction,proto3" json:"is_last_action,omitempty"`       // Whether this is the last action in the stage
	SessionId      string                 `protobuf:"bytes,8,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                   // Unique session identifier for this workflow run
	SequenceNumber int64                  `protobuf:"varint,9,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`   // Incremental sequence number for this session
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MessageContext) Reset() {
	*x = MessageContext{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContext) ProtoMessage() {}

func (x *MessageContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContext.ProtoReflect.Descriptor instead.
func (*MessageContext) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{0}
}

func (x *MessageContext) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *MessageContext) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *MessageContext) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *MessageContext) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *MessageContext) GetIsChildProcess() bool {
	if x != nil {
		return x.IsChildProcess
	}
	return false
}

func (x *MessageContext) GetActionIndex() int32 {
	if x != nil {
		return x.ActionIndex
	}
	return 0
}

func (x *MessageContext) GetIsLastAction() bool {
	if x != nil {
		return x.IsLastAction
	}
	return false
}

func (x *MessageContext) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MessageContext) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// Main message wrapper with metadata
type IPCMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=gostage.MessageType" json:"type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*IPCMessage_Log
	//	*IPCMessage_StorePut
	//	*IPCMessage_StoreDelete
	//	*IPCMessage_WorkflowStart
	//	*IPCMessage_WorkflowResult
	//	*IPCMessage_FinalStore
	Payload isIPCMessage_Payload `protobuf_oneof:"payload"`
	// Metadata for comprehensive tracking
	MessageId     string          `protobuf:"bytes,20,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp     int64           `protobuf:"varint,21,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Context       *MessageContext `protobuf:"bytes,22,opt,name=context,proto3" json:"context,omitempty"` // Full context information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPCMessage) Reset() {
	*x = IPCMessage{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPCMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCMessage) ProtoMessage() {}

func (x *IPCMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCMessage.ProtoReflect.Descriptor instead.
func (*IPCMessage) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{1}
}

func (x *IPCMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *IPCMessage) GetPayload() isIPCMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *IPCMessage) GetLog() *LogPayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_Log); ok {
			return x.Log
		}
	}
	return nil
}

func (x *IPCMessage) GetStorePut() *StorePutPayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_StorePut); ok {
			return x.StorePut
		}
	}
	return nil
}

func (x *IPCMessage) GetStoreDelete() *StoreDeletePayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_StoreDelete); ok {
			return x.StoreDelete
		}
	}
	return nil
}

func (x *IPCMessage) GetWorkflowStart() *WorkflowStartPayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_WorkflowStart); ok {
			return x.WorkflowStart
		}
	}
	return nil
}

func (x *IPCMessage) GetWorkflowResult() *WorkflowResultPayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_WorkflowResult); ok {
			return x.WorkflowResult
		}
	}
	return nil
}

func (x *IPCMessage) GetFinalStore() *FinalStorePayload {
	if x != nil {
		if x, ok := x.Payload.(*IPCMessage_FinalStore); ok {
			return x.FinalStore
		}
	}
	return nil
}

func (x *IPCMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *IPCMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *IPCMessage) GetContext() *MessageContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type isIPCMessage_Payload interface {
	isIPCMessage_Payload()
}

type IPCMessage_Log struct {
	Log *LogPayload `protobuf:"bytes,10,opt,name=log,proto3,oneof"`
}

type IPCMessage_StorePut struct {
	StorePut *StorePutPayload `protobuf:"bytes,11,opt,name=store_put,json=storePut,proto3,oneof"`
}

type IPCMessage_StoreDelete struct {
	StoreDelete *StoreDeletePayload `protobuf:"bytes,12,opt,name=store_delete,json=storeDelete,proto3,oneof"`
}

type IPCMessage_WorkflowStart struct {
	WorkflowStart *WorkflowStartPayload `protobuf:"bytes,13,opt,name=workflow_start,json=workflowStart,proto3,oneof"`
}

type IPCMessage_WorkflowResult struct {
	WorkflowResult *WorkflowResultPayload `protobuf:"bytes,14,opt,name=workflow_result,json=workflowResult,proto3,oneof"`
}

type IPCMessage_FinalStore struct {
	FinalStore *FinalStorePayload `protobuf:"bytes,15,opt,name=final_store,json=finalStore,proto3,oneof"`
}

func (*IPCMessage_Log) isIPCMessage_Payload() {}

func (*IPCMessage_StorePut) isIPCMessage_Payload() {}

func (*IPCMessage_StoreDelete) isIPCMessage_Payload() {}

func (*IPCMessage_WorkflowStart) isIPCMessage_Payload() {}

func (*IPCMessage_WorkflowResult) isIPCMessage_Payload() {}

func (*IPCMessage_FinalStore) isIPCMessage_Payload() {}

// Type-safe payload definitions
type LogPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogPayload) Reset() {
	*x = LogPayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogPayload) ProtoMessage() {}

func (x *LogPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogPayload.ProtoReflect.Descriptor instead.
func (*LogPayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{2}
}

func (x *LogPayload) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogPayload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogPayload) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogPayload) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StorePutPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                          // JSON-encoded value for flexibility
	ValueType     string                 `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"` // Type information for deserialization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorePutPayload) Reset() {
	*x = StorePutPayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorePutPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePutPayload) ProtoMessage() {}

func (x *StorePutPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePutPayload.ProtoReflect.Descriptor instead.
func (*StorePutPayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{3}
}

func (x *StorePutPayload) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StorePutPayload) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StorePutPayload) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type StoreDeletePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreDeletePayload) Reset() {
	*x = StoreDeletePayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreDeletePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeletePayload) ProtoMessage() {}

func (x *StoreDeletePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeletePayload.ProtoReflect.Descriptor instead.
func (*StoreDeletePayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{4}
}

func (x *StoreDeletePayload) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WorkflowStartPayload struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId         string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowDefinition []byte                 `protobuf:"bytes,2,opt,name=workflow_definition,json=workflowDefinition,proto3" json:"workflow_definition,omitempty"` // Serialized SubWorkflowDef
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WorkflowStartPayload) Reset() {
	*x = WorkflowStartPayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowStartPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStartPayload) ProtoMessage() {}

func (x *WorkflowStartPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStartPayload.ProtoReflect.Descriptor instead.
func (*WorkflowStartPayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowStartPayload) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowStartPayload) GetWorkflowDefinition() []byte {
	if x != nil {
		return x.WorkflowDefinition
	}
	return nil
}

type WorkflowResultPayload struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId      string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Success         bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ExecutionTimeMs int64                  `protobuf:"varint,4,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkflowResultPayload) Reset() {
	*x = WorkflowResultPayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowResultPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowResultPayload) ProtoMessage() {}

func (x *WorkflowResultPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowResultPayload.ProtoReflect.Descriptor instead.
func (*WorkflowResultPayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowResultPayload) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowResultPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WorkflowResultPayload) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *WorkflowResultPayload) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

type FinalStorePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreData     map[string][]byte      `protobuf:"bytes,1,rep,name=store_data,json=storeData,proto3" json:"store_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Key -> JSON-encoded value
	TypeInfo      map[string]string      `protobuf:"bytes,2,rep,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`    // Key -> type information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalStorePayload) Reset() {
	*x = FinalStorePayload{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalStorePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalStorePayload) ProtoMessage() {}

func (x *FinalStorePayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalStorePayload.ProtoReflect.Descriptor instead.
func (*FinalStorePayload) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{7}
}

func (x *FinalStorePayload) GetStoreData() map[string][]byte {
	if x != nil {
		return x.StoreData
	}
	return nil
}

func (x *FinalStorePayload) GetTypeInfo() map[string]string {
	if x != nil {
		return x.TypeInfo
	}
	return nil
}

// Acknowledgment message
type MessageAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Echo back the message ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAck) Reset() {
	*x = MessageAck{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAck) ProtoMessage() {}

func (x *MessageAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAck.ProtoReflect.Descriptor instead.
func (*MessageAck) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{8}
}

func (x *MessageAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MessageAck) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageAck) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// Connection info for establishing gRPC connection
type ConnectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // "localhost:50051"
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Transport     string                 `protobuf:"bytes,3,opt,name=transport,proto3" json:"transport,omitempty"` // "grpc" or "json"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectionInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConnectionInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConnectionInfo) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

// Workflow definition message for gRPC-based initialization
type WorkflowDefinition struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DefinitionJson []byte                 `protobuf:"bytes,3,opt,name=definition_json,json=definitionJson,proto3" json:"definition_json,omitempty"`                                                                     // Serialized SubWorkflowDef as JSON
	InitialStore   map[string][]byte      `protobuf:"bytes,4,rep,name=initial_store,json=initialStore,proto3" json:"initial_store,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Initial store data
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowDefinition) Reset() {
	*x = WorkflowDefinition{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDefinition) ProtoMessage() {}

func (x *WorkflowDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDefinition.ProtoReflect.Descriptor instead.
func (*WorkflowDefinition) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{10}
}

func (x *WorkflowDefinition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowDefinition) GetDefinitionJson() []byte {
	if x != nil {
		return x.DefinitionJson
	}
	return nil
}

func (x *WorkflowDefinition) GetInitialStore() map[string][]byte {
	if x != nil {
		return x.InitialStore
	}
	return nil
}

// Acknowledgment for workflow initialization
type WorkflowAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowAck) Reset() {
	*x = WorkflowAck{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAck) ProtoMessage() {}

func (x *WorkflowAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAck.ProtoReflect.Descriptor instead.
func (*WorkflowAck) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{11}
}

func (x *WorkflowAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WorkflowAck) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *WorkflowAck) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

// ReadySignal message for child process synchronization
type ReadySignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChildId       string                 `protobuf:"bytes,1,opt,name=child_id,json=childId,proto3" json:"child_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadySignal) Reset() {
	*x = ReadySignal{}
	mi := &file_proto_workflow_ipc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadySignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadySignal) ProtoMessage() {}

func (x *ReadySignal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workflow_ipc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadySignal.ProtoReflect.Descriptor instead.
func (*ReadySignal) Descriptor() ([]byte, []int) {
	return file_proto_workflow_ipc_proto_rawDescGZIP(), []int{12}
}

func (x *ReadySignal) GetChildId() string {
	if x != nil {
		return x.ChildId
	}
	return ""
}

var File_proto_workflow_ipc_proto protoreflect.FileDescriptor

const file_proto_workflow_ipc_proto_rawDesc = "" +
	"\n" +
	"\x18proto/workflow_ipc.proto\x12\agostage\"\xc7\x02\n" +
	"\x0eMessageContext\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x19\n" +
	"\bstage_id\x18\x02 \x01(\tR\astageId\x12\x1f\n" +
	"\vaction_name\x18\x03 \x01(\tR\n" +
	"actionName\x12\x1d\n" +
	"\n" +
	"process_id\x18\x04 \x01(\x05R\tprocessId\x12(\n" +
	"\x10is_child_process\x18\x05 \x01(\bR\x0eisChildProcess\x12!\n" +
	"\faction_index\x18\x06 \x01(\x05R\vactionIndex\x12$\n" +
	"\x0eis_last_action\x18\a \x01(\bR\fisLastAction\x12\x1d\n" +
	"\n" +
	"session_id\x18\b \x01(\tR\tsessionId\x12'\n" +
	"\x0fsequence_number\x18\t \x01(\x03R\x0esequenceNumber\"\xa7\x04\n" +
	"\n" +
	"IPCMessage\x12(\n" +
	"\x04type\x18\x01 \x01(\x0e2\x14.gostage.MessageTypeR\x04type\x12'\n" +
	"\x03log\x18\n" +
	" \x01(\v2\x13.gostage.LogPayloadH\x00R\x03log\x127\n" +
	"\tstore_put\x18\v \x01(\v2\x18.gostage.StorePutPayloadH\x00R\bstorePut\x12@\n" +
	"\fstore_delete\x18\f \x01(\v2\x1b.gostage.StoreDeletePayloadH\x00R\vstoreDelete\x12F\n" +
	"\x0eworkflow_start\x18\r \x01(\v2\x1d.gostage.WorkflowStartPayloadH\x00R\rworkflowStart\x12I\n" +
	"\x0fworkflow_result\x18\x0e \x01(\v2\x1e.gostage.WorkflowResultPayloadH\x00R\x0eworkflowResult\x12=\n" +
	"\vfinal_store\x18\x0f \x01(\v2\x1a.gostage.FinalStorePayloadH\x00R\n" +
	"finalStore\x12\x1d\n" +
	"\n" +
	"message_id\x18\x14 \x01(\tR\tmessageId\x12\x1c\n" +
	"\ttimestamp\x18\x15 \x01(\x03R\ttimestamp\x121\n" +
	"\acontext\x18\x16 \x01(\v2\x17.gostage.MessageContextR\acontextB\t\n" +
	"\apayload\"\xd6\x01\n" +
	"\n" +
	"LogPayload\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12=\n" +
	"\bmetadata\x18\x04 \x03(\v2!.gostage.LogPayload.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\x0fStorePutPayload\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1d\n" +
	"\n" +
	"value_type\x18\x03 \x01(\tR\tvalueType\"&\n" +
	"\x12StoreDeletePayload\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"h\n" +
	"\x14WorkflowStartPayload\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12/\n" +
	"\x13workflow_definition\x18\x02 \x01(\fR\x12workflowDefinition\"\xa3\x01\n" +
	"\x15WorkflowResultPayload\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12*\n" +
	"\x11execution_time_ms\x18\x04 \x01(\x03R\x0fexecutionTimeMs\"\x9f\x02\n" +
	"\x11FinalStorePayload\x12H\n" +
	"\n" +
	"store_data\x18\x01 \x03(\v2).gostage.FinalStorePayload.StoreDataEntryR\tstoreData\x12E\n" +
	"\ttype_info\x18\x02 \x03(\v2(.gostage.FinalStorePayload.TypeInfoEntryR\btypeInfo\x1a<\n" +
	"\x0eStoreDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a;\n" +
	"\rTypeInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\n" +
	"MessageAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\"\\\n" +
	"\x0eConnectionInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1c\n" +
	"\ttransport\x18\x03 \x01(\tR\ttransport\"\xf6\x01\n" +
	"\x12WorkflowDefinition\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x0fdefinition_json\x18\x03 \x01(\fR\x0edefinitionJson\x12R\n" +
	"\rinitial_store\x18\x04 \x03(\v2-.gostage.WorkflowDefinition.InitialStoreEntryR\finitialStore\x1a?\n" +
	"\x11InitialStoreEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"m\n" +
	"\vWorkflowAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vworkflow_id\x18\x03 \x01(\tR\n" +
	"workflowId\"(\n" +
	"\vReadySignal\x12\x19\n" +
	"\bchild_id\x18\x01 \x01(\tR\achildId*\xdd\x01\n" +
	"\vMessageType\x12\x1c\n" +
	"\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MESSAGE_TYPE_LOG\x10\x01\x12\x1a\n" +
	"\x16MESSAGE_TYPE_STORE_PUT\x10\x02\x12\x1d\n" +
	"\x19MESSAGE_TYPE_STORE_DELETE\x10\x03\x12\x1f\n" +
	"\x1bMESSAGE_TYPE_WORKFLOW_START\x10\x04\x12 \n" +
	"\x1cMESSAGE_TYPE_WORKFLOW_RESULT\x10\x05\x12\x1c\n" +
	"\x18MESSAGE_TYPE_FINAL_STORE\x10\x062\x9d\x03\n" +
	"\vWorkflowIPC\x12G\n" +
	"\x12InitializeWorkflow\x12\x1b.gostage.WorkflowDefinition\x1a\x14.gostage.WorkflowAck\x12N\n" +
	"\x19RequestWorkflowDefinition\x12\x14.gostage.ReadySignal\x1a\x1b.gostage.WorkflowDefinition\x127\n" +
	"\n" +
	"ChildReady\x12\x14.gostage.ReadySignal\x1a\x13.gostage.MessageAck\x127\n" +
	"\vSendMessage\x12\x13.gostage.IPCMessage\x1a\x13.gostage.MessageAck\x12>\n" +
	"\x0eStreamMessages\x12\x13.gostage.IPCMessage\x1a\x13.gostage.MessageAck(\x010\x01\x12C\n" +
	"\x13BidirectionalStream\x12\x13.gostage.IPCMessage\x1a\x13.gostage.IPCMessage(\x010\x01B'Z%github.com/davidroman0O/gostage/protob\x06proto3"

var (
	file_proto_workflow_ipc_proto_rawDescOnce sync.Once
	file_proto_workflow_ipc_proto_rawDescData []byte
)

func file_proto_workflow_ipc_proto_rawDescGZIP() []byte {
	file_proto_workflow_ipc_proto_rawDescOnce.Do(func() {
		file_proto_workflow_ipc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_workflow_ipc_proto_rawDesc), len(file_proto_workflow_ipc_proto_rawDesc)))
	})
	return file_proto_workflow_ipc_proto_rawDescData
}

var file_proto_workflow_ipc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_workflow_ipc_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_workflow_ipc_proto_goTypes = []any{
	(MessageType)(0),              // 0: gostage.MessageType
	(*MessageContext)(nil),        // 1: gostage.MessageContext
	(*IPCMessage)(nil),            // 2: gostage.IPCMessage
	(*LogPayload)(nil),            // 3: gostage.LogPayload
	(*StorePutPayload)(nil),       // 4: gostage.StorePutPayload
	(*StoreDeletePayload)(nil),    // 5: gostage.StoreDeletePayload
	(*WorkflowStartPayload)(nil),  // 6: gostage.WorkflowStartPayload
	(*WorkflowResultPayload)(nil), // 7: gostage.WorkflowResultPayload
	(*FinalStorePayload)(nil),     // 8: gostage.FinalStorePayload
	(*MessageAck)(nil),            // 9: gostage.MessageAck
	(*ConnectionInfo)(nil),        // 10: gostage.ConnectionInfo
	(*WorkflowDefinition)(nil),    // 11: gostage.WorkflowDefinition
	(*WorkflowAck)(nil),           // 12: gostage.WorkflowAck
	(*ReadySignal)(nil),           // 13: gostage.ReadySignal
	nil,                           // 14: gostage.LogPayload.MetadataEntry
	nil,                           // 15: gostage.FinalStorePayload.StoreDataEntry
	nil,                           // 16: gostage.FinalStorePayload.TypeInfoEntry
	nil,                           // 17: gostage.WorkflowDefinition.InitialStoreEntry
}
var file_proto_workflow_ipc_proto_depIdxs = []int32{
	0,  // 0: gostage.IPCMessage.type:type_name -> gostage.MessageType
	3,  // 1: gostage.IPCMessage.log:type_name -> gostage.LogPayload
	4,  // 2: gostage.IPCMessage.store_put:type_name -> gostage.StorePutPayload
	5,  // 3: gostage.IPCMessage.store_delete:type_name -> gostage.StoreDeletePayload
	6,  // 4: gostage.IPCMessage.workflow_start:type_name -> gostage.WorkflowStartPayload
	7,  // 5: gostage.IPCMessage.workflow_result:type_name -> gostage.WorkflowResultPayload
	8,  // 6: gostage.IPCMessage.final_store:type_name -> gostage.FinalStorePayload
	1,  // 7: gostage.IPCMessage.context:type_name -> gostage.MessageContext
	14, // 8: gostage.LogPayload.metadata:type_name -> gostage.LogPayload.MetadataEntry
	15, // 9: gostage.FinalStorePayload.store_data:type_name -> gostage.FinalStorePayload.StoreDataEntry
	16, // 10: gostage.FinalStorePayload.type_info:type_name -> gostage.FinalStorePayload.TypeInfoEntry
	17, // 11: gostage.WorkflowDefinition.initial_store:type_name -> gostage.WorkflowDefinition.InitialStoreEntry
	11, // 12: gostage.WorkflowIPC.InitializeWorkflow:input_type -> gostage.WorkflowDefinition
	13, // 13: gostage.WorkflowIPC.RequestWorkflowDefinition:input_type -> gostage.ReadySignal
	13, // 14: gostage.WorkflowIPC.ChildReady:input_type -> gostage.ReadySignal
	2,  // 15: gostage.WorkflowIPC.SendMessage:input_type -> gostage.IPCMessage
	2,  // 16: gostage.WorkflowIPC.StreamMessages:input_type -> gostage.IPCMessage
	2,  // 17: gostage.WorkflowIPC.BidirectionalStream:input_type -> gostage.IPCMessage
	12, // 18: gostage.WorkflowIPC.InitializeWorkflow:output_type -> gostage.WorkflowAck
	11, // 19: gostage.WorkflowIPC.RequestWorkflowDefinition:output_type -> gostage.WorkflowDefinition
	9,  // 20: gostage.WorkflowIPC.ChildReady:output_type -> gostage.MessageAck
	9,  // 21: gostage.WorkflowIPC.SendMessage:output_type -> gostage.MessageAck
	9,  // 22: gostage.WorkflowIPC.StreamMessages:output_type -> gostage.MessageAck
	2,  // 23: gostage.WorkflowIPC.BidirectionalStream:output_type -> gostage.IPCMessage
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_workflow_ipc_proto_init() }
func file_proto_workflow_ipc_proto_init() {
	if File_proto_workflow_ipc_proto != nil {
		return
	}
	file_proto_workflow_ipc_proto_msgTypes[1].OneofWrappers = []any{
		(*IPCMessage_Log)(nil),
		(*IPCMessage_StorePut)(nil),
		(*IPCMessage_StoreDelete)(nil),
		(*IPCMessage_WorkflowStart)(nil),
		(*IPCMessage_WorkflowResult)(nil),
		(*IPCMessage_FinalStore)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_workflow_ipc_proto_rawDesc), len(file_proto_workflow_ipc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_workflow_ipc_proto_goTypes,
		DependencyIndexes: file_proto_workflow_ipc_proto_depIdxs,
		EnumInfos:         file_proto_workflow_ipc_proto_enumTypes,
		MessageInfos:      file_proto_workflow_ipc_proto_msgTypes,
	}.Build()
	File_proto_workflow_ipc_proto = out.File
	file_proto_workflow_ipc_proto_goTypes = nil
	file_proto_workflow_ipc_proto_depIdxs = nil
}
